<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
     	http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd   
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:annotation-config />
	<context:property-placeholder location="WEB-INF/settings.properties" />

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />

	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/WEB-INF/view/" p:suffix=".jsp" />

	<!-- Method Mapping -->
	<bean id="methodNameResolver"
		class="org.springframework.web.servlet.mvc.multiaction.InternalPathMethodNameResolver" />

	<bean id="contentViewResolver"
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
			</map>
		</property>
		<property name="defaultViews">
			<bean
				class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
		</property>
	</bean>

	<bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="mappings">
			<value>
				facebook=facebookController
				gmail=gmailController
				sparklr=sparklrController
			</value>
		</property>
	</bean>

	<oauth:resource id="sparklr" type="authorization_code"
		client-id="tonr" client-secret="secret" access-token-uri="${accessTokenUri}"
		user-authorization-uri="${userAuthorizationUri}" scope="read,write" />

	<oauth:resource id="facebook" type="authorization_code"
		client-id="${facebook.client-id}" client-secret="${facebook.client-secret}"
		authentication-scheme="query" access-token-uri="https://graph.facebook.com/oauth/access_token"
		user-authorization-uri="https://www.facebook.com/dialog/oauth"
		token-name="oauth_token" client-authentication-scheme="form"
		scope="user_photos,email" />

	<oauth:resource id="gmail" type="authorization_code"
		client-id="${gmail.client-id}" client-secret="${gmail.client-secret}"
		authentication-scheme="query" access-token-uri="https://accounts.google.com/o/oauth2/token"
		user-authorization-uri="https://accounts.google.com/o/oauth2/auth"
		token-name="oauth_token" client-authentication-scheme="form"
		scope="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email" />

	<bean id="conversionService"
		class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<bean class="oauthsupport.mvc.AccessTokenRequestConverter" />
			</set>
		</property>
	</bean>

	<bean id="oauthAuthenticationSuccessHandler" class="oauthsupport.mvc.OAuthAuthenticationSuccessHandler">
		<property name="unregisteredView" value="/register.jsp" />
		<property name="registeredView" value="/" />
	</bean>

	<bean id="sparklrController" class="oauthsupport.mvc.OAuthController">
		<property name="authenticationSuccessHandler" ref="oauthAuthenticationSuccessHandler" />
		<property name="userDetailsReader">
			<bean class="oauthsupport.mvc.SparklrUserDetailsReader">
				<property name="userInfoURL" value="${sparklrGetUserInfoURL}" />
			</bean>
		</property>
		<property name="restTemplate">
			<oauth:rest-template resource="sparklr">
				<property name="messageConverters">
					<list>
						<ref bean="mappingJacksonHttpMessageConverter" />
					</list>
				</property>
			</oauth:rest-template>
		</property>
	</bean>

	<bean id="facebookController" class="oauthsupport.mvc.OAuthController">
		<property name="authenticationSuccessHandler" ref="oauthAuthenticationSuccessHandler" />
		<property name="userDetailsReader">
			<bean class="oauthsupport.mvc.FacebookUserDetailsReader" />
		</property>
		<property name="restTemplate">
			<oauth:rest-template resource="facebook">
				<property name="messageConverters">
					<list>
						<ref bean="mappingJacksonHttpMessageConverter" />
					</list>
				</property>
			</oauth:rest-template>
		</property>
	</bean>

	<bean id="gmailController" class="oauthsupport.mvc.OAuthController">
		<property name="authenticationSuccessHandler" ref="oauthAuthenticationSuccessHandler" />
		<property name="userDetailsReader">
			<bean class="oauthsupport.mvc.GmailUserDetailsReader" />
		</property>
		<property name="restTemplate">
			<oauth:rest-template resource="gmail">
				<property name="messageConverters">
					<list>
						<ref bean="mappingJacksonHttpMessageConverter" />
					</list>
				</property>
			</oauth:rest-template>
		</property>
	</bean>

	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<bean class="org.springframework.http.MediaType">
					<!--facebook sends its json as text/javascript for some reason -->
					<constructor-arg value="text" />
					<constructor-arg value="javascript" />
				</bean>
				<bean class="org.springframework.http.MediaType">
					<constructor-arg value="application" />
					<constructor-arg value="json" />
				</bean>
			</list>
		</property>
	</bean>
</beans>